clc;clear;

pieces_filenames = {'puzzles/square_pieces/piece_1.jpg', ...
    'puzzles/square_pieces/piece_2.jpg', ...
    'puzzles/square_pieces/piece_3.jpg', ...
    'puzzles/square_pieces/piece_4.jpg'};

% create a list of all pieces
pieces = [];
for piece_filename = pieces_filenames
    piece_filename 
    new_piece = im2double(rgb2gray(imread(piece_filename{)));
    pieces(end+1) = puzzlePiece(new_piece)
end

exit

% solution = random piece
% initialize each side of piece to null
% for each null side in solution
%   find 
% iterate over all side of other pieces


current_piece = im2double(rgb2gray(imread('puzzles/square_pieces/piece_1.jpg')));
right_edge = current_piece(:, end);

for piece_path = pieces
   piece = im2double(rgb2gray(imread(piece_path{1})));
   left_edge = piece(:, 1);
   abs(sum(right_edge - left_edge))
end

% im1 = im2double(rgb2gray(imread('puzzles/square_pieces/piece_1.jpg')));
% im2 = im2double(rgb2gray(imread('puzzles/square_pieces/piece_2.jpg')));
% 
% row2_end = im2(end, :);
% row2_beg = im2(1, :);
% 
% row1_end = im1(end, :);
% row1_beg = im1(1, :);
% 
% sum(row1_beg - row2_beg)
% sum(row1_beg - row2_end)
% sum(row1_end - row2_beg)
% sum(row1_end - row2_end)
% 
subplot(2, 2, 1)
imshow(imread('puzzles/square_pieces/piece_1.jpg'))
subplot(2, 2, 2)
imshow(imread('puzzles/square_pieces/piece_3.jpg'))
% 
% subplot(2, 2, 2)
% imshow(im1)
% subplot(2, 2, 4)
% imshow(im2)